---
title: "R Coding Exercise"
---

```{r}
# Loads the dslabs and tidyverse packages
library(dslabs)
library(tidyverse)

# view gapminder help file
help(gapminder)

# view data structure
str(gapminder)
```

```{r}
# summary statistics for the data
summary(gapminder)
```

```{r}
# get the object type of the data
class(gapminder)
```

```{r}
# seperate out Africa data
africadata <- gapminder %>% filter(continent == 'Africa')

# view data structure
str(africadata)

# summary statistics for the data
summary(africadata)
```

```{r}
# keep only infant_mortality and life_expectancy columns and save as im_le
im_le <- africadata %>% select(infant_mortality,life_expectancy)

# view data structure
str(im_le)

# summary statistics for the data
summary(im_le)
```

```{r}
# keep only population and life_expectancy columns and save as p_le
p_le <- africadata %>% select(population,life_expectancy)

# view data structure
str(p_le)

# summary statistics for the data
summary(p_le)
```

```{r}
# create a scatter plot of life_expenctancy as a function of infant_mortality
plot(im_le$infant_mortality, im_le$life_expectancy)
```

```{r}
# create a scatter plot of life_expenctancy as a function of the natural log of population
plot(log(p_le$population), p_le$life_expectancy)
```

Streaks are due to countries have multiple data points in the dataset (multiple years are reported for one country). Therefore, we are seeing the correlations over different time periods.

```{r}
# filter africadata to only include rows with no data for infant_mortality and then get the count of year values.
africadata %>% filter(is.na(infant_mortality)) %>% count(year)
```

```{r}
# seperate out data from 2000
africadata2000 <- africadata %>% filter(year == 2000)

# view data structure
str(africadata2000)

# summary statistics for the data
summary(africadata2000)
```

```{r}
# create a scatter plot of life_expenctancy as a function of infant_mortality
plot(africadata2000$infant_mortality, africadata2000$life_expectancy)
```

```{r}
# create a scatter plot of life_expenctancy as a function of the natural log of population
plot(log(africadata2000$population), africadata2000$life_expectancy)
```

```{r}
# linear regression of life_expectancy by infant_mortality
fit1 <- lm(life_expectancy ~ infant_mortality, data=africadata2000)

# linear regression of life_expectancy by population
fit2 <- lm(life_expectancy ~ population, data=africadata2000)

# summary of the infant_mortality model
summary(fit1)
```

```{r}
# summary of the population model
summary(fit2)
```

Since the p-value of the infant_mortality model is less than .05, there is a statistically significant linear relationship between infant mortality and life expectancy This is not true for the population model, so there does not exist a strong linear relationship between population and life expectancy.

# THIS SECTION CONTRIBUTED TO BY ANTONIO FLORES

Choosing to analyze the 'us_contagious_diseases' dataset from gapminder.

```{r}
#Calling the data from gapminder package
data('us_contagious_diseases')
#Transferring to data frame with simpler name
disease = us_contagious_diseases
```

```{r}
# Checking structure of the data
str(disease)
#Looks like all the data types are usable
```

```{r}
#Checking the data quartiles and some samples
summary(disease)
```

```{r}
#Creating a variable to show how many cases per 100,000 people in the state have contracted the disease
disease$Per100K = (disease$count /(disease$population / 100))
```

```{r}
#Adding package for better visualizations
library(ggplot2)
```

```{r}
#Bar chart showing which diseases have been most severe in our dataset
disease |>
  ggplot()+
    geom_bar(aes(x=disease, y=count), stat="identity")
```

```{r}
#Plotting the total diseases per year
#We can see what we would expect, less cases as medicince modernizes
plot(disease$year, disease$count)
```

```{r}
#Similar chart to the previous one, but now we're seeing comparing diseases to each other for reference
ggplot(data=disease, aes(x=year, y=count, group=disease))+
  geom_line(aes(color=disease))
```

```{r}
#Bar plot showing which states have had the most cases of diseases overall
disease |>
  ggplot()+
    geom_bar(aes(x=reorder(state, count), y=count), stat="identity")+
    coord_flip()
#Using the reorder command so that states with the most cases are at the top
#Using the coord_flip command so the state names are on the left side
```

```{r}
#Generating the same plot but now we're using the cases per 100,000 variable we created earliar.
disease |>
  ggplot()+
    geom_bar(aes(x=reorder(state, Per100K), y=Per100K), stat="identity")+
    coord_flip()
#We see a different set of states when we account for population size
```

```{r}
#Plotting to determine which weeks have most cases reported
plot(disease$weeks_reporting, disease$count)
```

```{r}
#First Model: Predictor is weeks reported and outcome is number of cases

fit1 = lm(count ~ weeks_reporting, data=disease)
summary(fit1)
```

We see a very significant effect as indicated by the low p-value, but a fairly low R\^2 value which means that our model doesn't account for much of the variance in the data

```{r}
#Second Model: Predictor is cases per 100K and outcome is number of cases

fit2 = lm(count ~ Per100K, data=disease)
summary(fit2)
```

We see there is a significant effect caused the number of cases per 100K and a greater R\^2 value then our previous model.
.
