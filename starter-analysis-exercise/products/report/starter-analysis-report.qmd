---
title: "Predicting the Results of College Football Games"
subtitle: ""
author: Benjamin Farias
date: today
format:
  html:
    toc: false
    number-sections: true
    highlight-style: github
bibliography: ../dataanalysis-template-references.bib
csl: ../apa.csl
---

```{r, echo=FALSE, message=FALSE}
# load a few R packages
library(here)
library(knitr)
```



# Summary/Abstract
Using a combination of play-by-play stats and box scores, I hope to build a model that can predict the outcome of a college football game. As statistics can be skewed by teams playing against similar difficulty teams in their conferences, normalization and adjustments will be performed to more accurately predict the outcome of teams in out-of-conference games.


{{< pagebreak >}}


# Introduction 

## General Background Information
The college football season consists of 128 D1 FBS teams that play 12 games a season. The teams are split into multiple conferences. Teams will play 8-9 games against teams in the same conference with the remainder of games being played against non-conference teams. Additionally with the expansion of the College Football Playoffs, teams will play a more diverse set of teams in the post-season [@dinich24]. This makes it useful to be able to compare teams despite not playing equal schedules.

## Description of data and data source
The data is from https://collegefootballdata.com and is pulled and imported using the CFBFastR library. The website contains game data by team and player as well as play-by-play data and advanced statistics for all D1 football games.

## Questions/Hypotheses to be addressed
How a team's historical data can be used to predict how teams will perform in the future; however, the data will be skewed by conferences as the teams at the top of each conference will appear to perform similarly despite not playing equal opponents.


{{< pagebreak >}}


# Methods 

The data was pulled from https://collegefootballdata.com using the CFBFastR library. Data used included weekly box scores that were combined to create averages for the week. The idea is the models will be more accurate later in the in the season as the averages become more reflective of the team's capabilities through the season, and after teams have played more conference games. Early in the season, statistics will be skewed as many power teams play an easier out-of-conference schedule, while G5 teams are incentivized to play tougher teams that can provide a higher payout. 

The data was then used to create multiple models using a train/test split with the most recent season being used to test, and older seasons used to train. This was done due to the changing of the game where not all statistics may still be impactful as the game evolves. The models were tested on the full season to determine which would perform the best across the season. The models were also separately tested only after the halfway point of the most recent season.


## Data import and cleaning

Data was pulled in for all weeks of the season with the CFBFastR package. Some values were pulled in as the wrong datatype, so key data was converted to the correct data type. The weekly box scores were then aggregated to include averages at each week in the season. To aid in logistic regression, the averages for before the week of the game were combined and subtracted resulting in differences. In these differences, the postive indicates the home team having the advantage, and the negative indicating the away team had the avantage. These differences were then used in the regression models. For full code, refer to the statistical-analysis.R 

## Statistical analysis
Multiple models were created to attempt to predict the outcome of games. A linear model was used to predict the score difference and then win was given to the team with the higher predicted score. As yards and sacks had the most linear relationship with points, they were the only variables included in the model.

A logistic model was also created to predict whether the home team would win the game. This model included more variables that impacted the winner of the game.

As the goal is to predict the outcome of the game, models were evalulated based on getting the outcome correct, with more emphasis placed on predicting the correct outcome later in the season. For the full analysis, refer to the statistical-analysis.R file.

{{< pagebreak >}}

<!--
# Results

## Exploratory/Descriptive analysis

_Use a combination of text/tables/figures to explore and describe your data. Show the most important descriptive results here. Additional ones should go in the supplement. Even more can be in the R and Quarto files that are part of your project._


@tbl-summarytable shows a summary of the data.

Note the loading of the data providing a **relative** path using the `../../` notation. (Two dots means a folder up). You never want to specify an **absolute** path like `C:\ahandel\myproject\results\` because if you share this with someone, it won't work for them since they don't have that path. You can also use the `here` R package to create paths. See examples of that below. **I recommend the `here` package, but I'm showing the other approach here just in case you encounter it.**

```{r}
#| label: tbl-summarytable
#| tbl-cap: "Data summary table."
#| echo: FALSE
resulttable=readRDS("../../results/tables-files/summarytable.rds")
knitr::kable(resulttable)
```



## Basic statistical analysis

_To get some further insight into your data, if reasonable you could compute simple statistics (e.g. simple models with 1 predictor) to look for associations between your outcome(s) and each individual predictor variable. Though note that unless you pre-specified the outcome and main exposure, any "p<0.05 means statistical significance" interpretation is not valid._


@fig-result shows a scatterplot figure produced by one of the R scripts.

```{r}
#| label: fig-result
#| fig-cap: "Height and weight stratified by gender."
#| echo: FALSE
knitr::include_graphics(here("starter-analysis-exercise","results","figures","height-weight-stratified.png"))
```
-->

## Full analysis

Both models were used to predict whether the home team would win the game. @tbl-resulttable2 shows a summary of the linear model's classification accuracy. The model correctly predicted the winner in 68% of games in the 2023 season. The logistic model performed similarly, as shown in @tbl-resulttable3, with a 68% accuraracy rate, however the logistic model seemed to predict the home team to win more often, indicating that it gave a higher importance to home field advantage.

```{r}
#| label: tbl-resulttable2
#| tbl-cap: "Linear model fit table."
#| echo: FALSE
resulttable2 = readRDS(here("starter-analysis-exercise","results","tables-files","resulttable2.rds"))
knitr::kable(resulttable2)
```
```{r}
#| label: tbl-resulttable3
#| tbl-cap: "Logisitic model fit table."
#| echo: FALSE
resulttable3 = readRDS(here("starter-analysis-exercise","results","tables-files","resulttable3.rds"))
knitr::kable(resulttable3)
```

{{< pagebreak >}}


# Discussion

## Summary and Interpretation
Both models were able to accurately predict the outcome of a game in 68% of games in the 2023 season. This is better than a coin flip and outperforms analysts who are correct in about 60% of their predictions [@newman20].

## Strengths and Limitations
Both models make use of basic box score statistics in predicting the outcome of the game. This makes the models more understandable as box score statistics are commonly referenced. However these statistics are limited in what can be measured in the game. Advanced statistics can account for some of this gap, but are more difficult to understand.

The models could also be improved using some form of weighting to account for differences in schedule strength. One method to do this is with an ELO ranking that would indicate the comparative strength of teams based on historical results [@radjewski21].

## Conclusions
This project has been an excellent learning experience in exploring and preparing data for modeling, creating and evaluating models, and communicating results. The models I created performed better than I expected with the basic statistics they used for fitting; however, there is room for improvement to address some of the limitations previously mentioned. 


{{< pagebreak >}}

# References



